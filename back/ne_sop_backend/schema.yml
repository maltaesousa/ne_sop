openapi: 3.0.3
info:
  title: Suivi des Objets Parlementaires (SOP)
  version: 1.0.0
  description: API documentation
paths:
  /api/entity/:
    get:
      operationId: api_entity_list
      description: Entities viewset
      tags:
      - Entities
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Entity'
          description: ''
    post:
      operationId: api_entity_create
      description: Entities viewset
      tags:
      - Entities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntityRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EntityRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EntityRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Entity'
          description: ''
  /api/entity-type/:
    get:
      operationId: api_entity_type_list
      description: Entity types viewset
      tags:
      - Entity type
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EntityType'
          description: ''
  /api/entity/{id}/:
    get:
      operationId: api_entity_retrieve
      description: Entities viewset
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this entity.
        required: true
      tags:
      - Entities
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Entity'
          description: ''
    put:
      operationId: api_entity_update
      description: Entities viewset
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this entity.
        required: true
      tags:
      - Entities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntityRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EntityRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EntityRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Entity'
          description: ''
    delete:
      operationId: api_entity_destroy
      description: Entities viewset
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this entity.
        required: true
      tags:
      - Entities
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/event/:
    get:
      operationId: api_event_list
      description: Events viewset
      tags:
      - Events
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Event'
          description: ''
    post:
      operationId: api_event_create
      description: Events viewset
      tags:
      - Events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EventRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EventRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ''
  /api/event-type/:
    get:
      operationId: api_event_type_list
      description: Event types viewset
      tags:
      - Event types
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EventType'
          description: ''
  /api/event/{id}/:
    get:
      operationId: api_event_retrieve
      description: Events viewset
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this event.
        required: true
      tags:
      - Events
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ''
    put:
      operationId: api_event_update
      description: Events viewset
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this event.
        required: true
      tags:
      - Events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EventRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EventRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ''
    delete:
      operationId: api_event_destroy
      description: Events viewset
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this event.
        required: true
      tags:
      - Events
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/item/:
    get:
      operationId: api_item_list
      description: Items viewset
      tags:
      - Items
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Item'
          description: ''
    post:
      operationId: api_item_create
      description: Items viewset
      tags:
      - Items
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ItemRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ItemRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
          description: ''
  /api/item-type/:
    get:
      operationId: api_item_type_list
      description: Item types viewset
      tags:
      - Item types
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ItemType'
          description: ''
  /api/item/{id}/:
    get:
      operationId: api_item_retrieve
      description: Items viewset
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this item.
        required: true
      tags:
      - Items
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
          description: ''
    put:
      operationId: api_item_update
      description: Items viewset
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this item.
        required: true
      tags:
      - Items
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ItemRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ItemRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ItemRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'
          description: ''
    delete:
      operationId: api_item_destroy
      description: Items viewset
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this item.
        required: true
      tags:
      - Items
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/template/:
    get:
      operationId: api_template_list
      description: Templates viewset
      tags:
      - Templates
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Template'
          description: ''
  /api/user/:
    get:
      operationId: api_user_list
      description: Users viewset
      tags:
      - Users
      security:
      - cookieAuth: []
      - basicAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
components:
  schemas:
    Entity:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
          maxLength: 100
        type:
          allOf:
          - $ref: '#/components/schemas/EntityType'
          readOnly: true
        description:
          type: string
          maxLength: 256
        street:
          type: string
          maxLength: 256
        city:
          type: string
          maxLength: 256
        postalcode:
          type: string
          maxLength: 25
        region:
          type: string
          maxLength: 256
        country:
          type: string
          maxLength: 100
        website:
          type: string
          format: uri
          maxLength: 512
        email:
          type: string
          format: email
          maxLength: 256
        telephone:
          type: string
          maxLength: 256
        valid:
          type: boolean
      required:
      - id
      - type
      - uuid
    EntityRequest:
      type: object
      properties:
        name:
          type: string
          maxLength: 100
        type_id:
          type: integer
          writeOnly: true
        description:
          type: string
          maxLength: 256
        street:
          type: string
          maxLength: 256
        city:
          type: string
          maxLength: 256
        postalcode:
          type: string
          maxLength: 25
        region:
          type: string
          maxLength: 256
        country:
          type: string
          maxLength: 100
        website:
          type: string
          format: uri
          maxLength: 512
        email:
          type: string
          format: email
          maxLength: 256
        telephone:
          type: string
          maxLength: 256
        valid:
          type: boolean
      required:
      - type_id
    EntityType:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 50
      required:
      - id
    EntityTypeRequest:
      type: object
      properties:
        name:
          type: string
          maxLength: 50
    Event:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        date:
          type: string
          format: date
        time:
          type: string
          format: time
        type:
          allOf:
          - $ref: '#/components/schemas/EventType'
          readOnly: true
        item:
          allOf:
          - $ref: '#/components/schemas/Item'
          readOnly: true
        description:
          type: string
          maxLength: 500
        valid:
          type: boolean
      required:
      - date
      - id
      - item
      - time
      - type
      - uuid
    EventRequest:
      type: object
      properties:
        date:
          type: string
          format: date
        time:
          type: string
          format: time
        type_id:
          type: integer
          writeOnly: true
        item_id:
          type: integer
          writeOnly: true
        description:
          type: string
          maxLength: 500
        valid:
          type: boolean
      required:
      - date
      - item_id
      - time
      - type_id
    EventType:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 50
      required:
      - id
    EventTypeRequest:
      type: object
      properties:
        name:
          type: string
          maxLength: 50
    Item:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        uuid:
          type: string
          format: uuid
          readOnly: true
        number:
          type: string
          maxLength: 30
        title:
          type: string
          maxLength: 512
        type:
          allOf:
          - $ref: '#/components/schemas/ItemType'
          readOnly: true
        status:
          allOf:
          - $ref: '#/components/schemas/ItemStatus'
          readOnly: true
        author:
          allOf:
          - $ref: '#/components/schemas/Entity'
          readOnly: true
        valid:
          type: boolean
      required:
      - author
      - id
      - status
      - type
      - uuid
    ItemRequest:
      type: object
      properties:
        number:
          type: string
          maxLength: 30
        title:
          type: string
          maxLength: 512
        type_id:
          type: integer
          writeOnly: true
        status_id:
          type: integer
          writeOnly: true
        author_id:
          type: integer
          writeOnly: true
        valid:
          type: boolean
      required:
      - author_id
      - status_id
      - type_id
    ItemStatus:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 50
        color:
          type: string
          maxLength: 50
      required:
      - id
    ItemStatusRequest:
      type: object
      properties:
        name:
          type: string
          maxLength: 50
        color:
          type: string
          maxLength: 50
    ItemType:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 50
      required:
      - id
    ItemTypeRequest:
      type: object
      properties:
        name:
          type: string
          maxLength: 50
    Template:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        item_types:
          $ref: '#/components/schemas/ItemType'
        valid:
          type: boolean
      required:
      - id
      - item_types
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        last_login:
          type: string
          format: date-time
          nullable: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        is_active:
          type: boolean
          title: Active
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
      required:
      - id
      - username
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
